@page "/query"
@using Flow.Net.Sdk.Core.Models
@using Flow.Net.Sdk.Core.Cadence
@using Fcl.Net.Core.Models
@inject Fcl.Net.Core.Fcl Fcl

<PageTitle>Query</PageTitle>

<h1>Query</h1>


@if (!string.IsNullOrEmpty(result))
{
    <p role="status">Result: @result</p>
}

<button onclick="@(async () => await QueryAsync())">Query</button>

@code {   
    private string? result;

    private async Task QueryAsync()
    {
        try
        {
            var script = @"
pub fun main(a: Int): Int {
    return a + 10
}";

            var arguments = new List<ICadence>
            {
                new CadenceNumber(CadenceNumberType.Int, "5")
            };

            var response = await Fcl.QueryAsync(
                new FlowScript
                {
                    Script = script,
                    Arguments = arguments
                });

            result = response.As<CadenceNumber>().Value;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
